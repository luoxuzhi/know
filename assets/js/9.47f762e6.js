(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{435:function(e,t,s){"use strict";s.r(t);var a=s(53),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"_8-console对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-console对象"}},[e._v("#")]),e._v(" 8.console对象")]),e._v(" "),s("p",[e._v("1.console对象的方法")]),e._v(" "),s("p",[e._v("console对象提供的各种方法，用来与控制台窗口互动。"),s("code",[e._v("log()，info()，debug()")])]),e._v(" "),s("p",[s("code",[e._v("count()")]),e._v("count方法用于计数，输出它被调用了多少次。")]),e._v(" "),s("p",[s("code",[e._v("assert()")])]),e._v(" "),s("p",[e._v("assert方法接受两个参数，第一个参数是表达式，第二个参数是字符串。只有当第一个参数为false，才会输出第二个参数，否则不会有任何结果。")]),e._v(" "),s("p",[s("code",[e._v("time()")])]),e._v(" "),s("p",[e._v("timeEnd()这两个方法用于计时，可以算出一个操作所花费的准确时间。操作方法被这两个方法包裹")]),e._v(" "),s("p",[s("code",[e._v("profile()、profileEnd()")])]),e._v(" "),s("p",[e._v("console.profile方法用来新建一个性能测试器（profile），它的参数是性能测试器的名字。")]),e._v(" "),s("p",[e._v("2.console.log方法支持以下占位符，不同格式的数据必须使用对应格式的占位符。占位符写在第一个参数里面。")]),e._v(" "),s("p",[s("code",[e._v("%s")]),e._v(" 字符串")]),e._v(" "),s("p",[s("code",[e._v("%d")]),e._v(" 整数")]),e._v(" "),s("p",[s("code",[e._v("%i")]),e._v(" 整数")]),e._v(" "),s("p",[s("code",[e._v("%f")]),e._v(" 浮点数")]),e._v(" "),s("p",[s("code",[e._v("%o")]),e._v(" 对象的链接")]),e._v(" "),s("p",[s("code",[e._v("%c")]),e._v(" CSS格式字符串")]),e._v(" "),s("p",[e._v("3.debugger语句")]),e._v(" "),s("p",[e._v("debugger语句主要用于除错，作用是设置断点。如果有正在运行的除错工具，程序运行到debugger语句时会自动停下。如果没有除错工具，debugger语句不会产生任何结果，JavaScript引擎自动跳过这一句。")]),e._v(" "),s("p",[e._v("4.属性描述对象")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  writable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  enumerable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  configurable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  get"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  set"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("undefined")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[s("code",[e._v("enumerable")]),e._v("默认为"),s("code",[e._v("true")]),e._v("，如果设为"),s("code",[e._v("false")]),e._v("，会使某些操作（"),s("code",[e._v("for...in")]),e._v("循环、"),s("code",[e._v("Object.keys()")]),e._v("）跳过该属性")]),e._v(" "),s("p",[s("code",[e._v("Object.defineProperty")]),e._v("方法和"),s("code",[e._v("Object.defineProperties")]),e._v("方法，都有性能损耗，会拖慢执行速度，不宜大量使用。")])])}),[],!1,null,null,null);t.default=o.exports}}]);