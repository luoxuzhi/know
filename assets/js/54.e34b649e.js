(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{478:function(t,s,a){"use strict";a.r(s);var r=a(53),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"mock-方案对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-方案对比"}},[t._v("#")]),t._v(" mock 方案对比")]),t._v(" "),a("h4",{attrs:{id:"_1-代码侵入-直接在代码中写死-mock-数据-或者请求本地的-json-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-代码侵入-直接在代码中写死-mock-数据-或者请求本地的-json-文件"}},[t._v("#")]),t._v(" 1. 代码侵入（直接在代码中写死 mock 数据，或者请求本地的 JSON 文件）")]),t._v(" "),a("ul",[a("li",[t._v("优点 ：无")]),t._v(" "),a("li",[t._v("缺点 ：")])]),t._v(" "),a("ol",[a("li",[t._v("和其它方案比 Mock 效果不好")]),t._v(" "),a("li",[t._v("与真实 Server 环境的切换非常麻烦，一切需要侵入代码切换环境的行为都是不好的。")])]),t._v(" "),a("h4",{attrs:{id:"_2-请求拦截"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求拦截"}},[t._v("#")]),t._v(" 2.请求拦截")]),t._v(" "),a("p",[t._v("代表 mock.js")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\\\"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api\\\\"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("visitor\\\\"),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ok'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id|+1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@sen'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("优点 ：与前端代码分离，可生成随机数")])]),t._v(" "),a("li",[a("p",[t._v("缺点 ：")])])]),t._v(" "),a("ol",[a("li",[t._v("数据都是动态生成的假数据，无法真实模拟增删改查的情况")]),t._v(" "),a("li",[t._v("只支持"),a("code",[t._v("ajax")]),t._v("，不支持"),a("code",[t._v("fetch")])])]),t._v(" "),a("h4",{attrs:{id:"_3-接口管理工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-接口管理工具"}},[t._v("#")]),t._v(" 3. 接口管理工具")]),t._v(" "),a("p",[t._v("代表：rap、swagger、moco、yapi")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优点 ：配置功能强大，接口管理与 Mock 一体，后端修改接口 Mock 也跟着更改，可靠")])]),t._v(" "),a("li",[a("p",[t._v("缺点 ：")])])]),t._v(" "),a("ol",[a("li",[t._v("配置复杂，依赖后端")]),t._v(" "),a("li",[t._v("一般会作为大团队的基础建设而存在，没有这个条件需慎重考虑")])]),t._v(" "),a("h4",{attrs:{id:"_4-本地-node-服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-本地-node-服务器"}},[t._v("#")]),t._v(" 4. 本地 node 服务器")]),t._v(" "),a("p",[t._v("代表：json-server")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优点 ： 配置简单，自定义程度高，一切尽在掌握中，增删改查真实模拟")])]),t._v(" "),a("li",[a("p",[t._v("缺点 ： 与接口管理工具相比，无法随着后端 API 的修改而自动修改")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);