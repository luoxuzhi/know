(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{447:function(t,e,a){"use strict";a.r(e);var s=a(53),_=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_5-数值的扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-数值的扩展"}},[t._v("#")]),t._v(" 5.数值的扩展")]),t._v(" "),a("p",[t._v("1.二进制和八进制表示法")]),t._v(" "),a("p",[t._v("ES6 提供了二进制和八进制数值的新的写法，分别用前缀"),a("code",[t._v("0b（或0B")]),t._v("）和"),a("code",[t._v("0o（或0O）")]),t._v("表示。\n如果要将0b和0o前缀的字符串数值转为十进制，要使用"),a("code",[t._v("Number")]),t._v("方法。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0o111'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 73")]),t._v("\n")])])]),a("p",[t._v("2.Number.isFinite(), Number.isNaN()")]),t._v(" "),a("p",[t._v("ES6在Number对象上，新提供了Number.isFinite()和Number.isNaN()两个方法。这两个新方法只对数值有效，非数值一律返回false。")]),t._v(" "),a("p",[a("code",[t._v("Number.isFinite()")]),t._v("用来检查一个数值是否为有限的（finite）。")]),t._v(" "),a("p",[a("code",[t._v("Number.isNaN()")]),t._v("用来检查一个值是否为NaN。")]),t._v(" "),a("p",[a("code",[t._v("Number.parseInt()")])]),t._v(" "),a("p",[a("code",[t._v("Number.parseFloat()")])]),t._v(" "),a("p",[a("code",[t._v("Number.isInteger()")]),t._v("用来判断一个值是否为整数。需要注意的是，在JavaScript内部，整数和浮点数是同样的储存方法，所以3和3.0被视为同一个值。")]),t._v(" "),a("p",[a("code",[t._v("Number.EPSILON")]),t._v("的实质是一个可以接受的误差范围。")]),t._v(" "),a("p",[a("code",[t._v("Number.isSafeInteger()")]),t._v("：JavaScript能够准确表示的整数范围在"),a("code",[t._v("-2^53")]),t._v("~"),a("code",[t._v("2^53")]),t._v("之间（不含两个端点），超过这个范围，无法精确表示这个值。ES6引入了"),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v("和"),a("code",[t._v("Number.MIN_SAFE_INTEGER")]),t._v("这两个常量，用来表示这个范围的上下限。")]),t._v(" "),a("p",[a("code",[t._v("Number.isSafeInteger()")]),t._v("则是用来判断一个整数是否落在这个范围之内。")]),t._v(" "),a("p",[t._v("3.Math对象的扩展")]),t._v(" "),a("p",[t._v("Math.trunc()方法用于去除一个数的小数部分，返回整数部分。")]),t._v(" "),a("p",[t._v("Math.sign()方法用来判断一个数到底是正数、负数、还是零。它会返回五种值。参数为正数，返回+1；参数为负数，返回-1；参数为0，返回0；参数为-0，返回-0;其他值，返回NaN。Math.sign()用来判断一个值的正负，但是如果参数是-0，它会返回-0。")]),t._v(" "),a("p",[t._v("Math.cbrt()方法用于计算一个数的立方根。")]),t._v(" "),a("p",[t._v("Math.fround()方法返回一个数的单精度浮点数形式。")]),t._v(" "),a("p",[t._v("Math.hypot()方法返回所有参数的平方和的平方根。")]),t._v(" "),a("p",[t._v("4.对数方法")]),t._v(" "),a("p",[t._v("Math.expm1(x)返回ex - 1，即Math.exp(x) - 1。  注意是m1不是ml")]),t._v(" "),a("p",[t._v("Math.log1p(x)方法返回1 + x的自然对数，即Math.log(1 + x)。如果x小于-1，返回NaN。")]),t._v(" "),a("p",[t._v("Math.log10(x)返回以10为底的x的对数。如果x小于0，则返回NaN。")]),t._v(" "),a("p",[t._v("Math.log2(x)返回以2为底的x的对数。如果x小于0，则返回NaN。")]),t._v(" "),a("p",[t._v("5.指数运算符")]),t._v(" "),a("p",[t._v("ES2016 新增了一个指数运算符（**）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);