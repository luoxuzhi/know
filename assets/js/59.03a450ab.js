(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{480:function(t,s,a){"use strict";a.r(s);var r=a(53),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_7-web-安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-web-安全"}},[t._v("#")]),t._v(" 7. web 安全")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/zhanghaiyu-Jade/p/11148530.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体见链接"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-xss"}},[t._v("#")]),t._v(" 1. XSS")]),t._v(" "),a("p",[t._v("XSS 攻击全称跨站脚本攻击，XSS 是一种在 web 应用中的计算机安全漏洞，它允许恶意 web 用户将代码植入到提供给其它用户使用的页面中。")]),t._v(" "),a("p",[t._v("常见的 XSS 攻击有三种：")]),t._v(" "),a("p",[t._v("DOM-based 型、反射型、存储型。其中,反射型、DOM-based 型可以归类为非持久型 XSS 攻击。存储型归类为持久型 XSS 攻击。")]),t._v(" "),a("p",[t._v("①DOM-based 型攻击：利用 dom 本身的缺陷，进行攻击")]),t._v(" "),a("p",[t._v("栗子：就是页面中的某个图片，获取图片的路径：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{img.src}}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//返回的 img.src=/xxxx"  onerror=xxx"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//这样放到img的src中就成了这样<img src="/xxx"  onerror=xxx">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//src肯定会加载失败，然后执行了onerror中注入的恶意代码，达到攻击效果")]),t._v("\n")])])]),a("p",[t._v("② 反射型")]),t._v(" "),a("p",[t._v("恶意代码并没有保存在目标网站，通过引诱用户点击一个链接到目标网站的恶意链接来实施攻击的。")]),t._v(" "),a("p",[t._v("栗子：")]),t._v(" "),a("p",[t._v("有这样一个 url：http:xxxxx.con?name=xxx(xxx 是恶意代码)")]),t._v(" "),a("p",[t._v("//传到后端的参数 name 被后端接收之后，响应的页面包含 name 这个变量的，会把这个 name 的内容注入到页面上面，达到攻击的效果")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection 头 （现代浏览器的防范措施）\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0： 表示关闭浏览器的 XSS 防护机制")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 　　　　　　　　　　　　"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1：删除检测到的恶意代码， 如果响应报文中没有看到 X-XSS-Protection 字段，那么浏览器就认为 X-XSS-Protection 配置为 1，这是浏览器的默认设置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("block "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode=block ： 给出警告信息，阻止页面的渲染执行")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("report"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("reporting"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// report=<reporting-uri> ： 进行上报")]),t._v("\n")])])]),a("p",[t._v("③ 存储型")]),t._v(" "),a("p",[t._v("前端页面中表单提交的数据存在恶意代码被保存到目标网站的服务器中，这种攻击具有较强的稳定性和持久性。")]),t._v(" "),a("h4",{attrs:{id:"xss-防御手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-防御手段"}},[t._v("#")]),t._v(" xss 防御手段：")]),t._v(" "),a("p",[t._v("① 过滤")]),t._v(" "),a("p",[t._v("对用户的输入进行过滤，移除用户输入的 style、script、iframe、img、a")]),t._v(" "),a("p",[t._v("② 编码")]),t._v(" "),a("p",[t._v("HTML Entity 编码")]),t._v(" "),a("p",[t._v("③ 将重要的 cookie 设置成 http only 这样就不能通过 js 获取到该 cookie 了")]),t._v(" "),a("h3",{attrs:{id:"_2-csrf-跨站请求伪造-本质是请求参数可预知-利用网站对用户网页浏览的信任。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-csrf-跨站请求伪造-本质是请求参数可预知-利用网站对用户网页浏览的信任。"}},[t._v("#")]),t._v(" 2. CSRF(跨站请求伪造)，本质是请求参数可预知，利用网站对用户网页浏览的信任。")]),t._v(" "),a("p",[t._v("CSRF 如何防御(增加验证流程，如指纹、密码、短信验证码):")]),t._v(" "),a("p",[t._v("① 使用 token:")]),t._v(" "),a("p",[t._v("服务器发送给客户端一个 token，客户端提交表单时带上该 token，服务器验证 token 是否有效，有效就允许访问，否则拒绝访问。")]),t._v(" "),a("p",[t._v("②Referer 验证")]),t._v(" "),a("p",[t._v("Referer 指的是页面请求来源，意思是，只接受本站的请求，服务器才做响应；如果不是，就拦截。")]),t._v(" "),a("h3",{attrs:{id:"_3-sql-注入攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-sql-注入攻击"}},[t._v("#")]),t._v(" 3. SQL 注入攻击")]),t._v(" "),a("p",[t._v("防范策略：")]),t._v(" "),a("p",[t._v("① 验证输入类型")]),t._v(" "),a("p",[t._v("比如某个视图函数接收整形 id 来查询，那么就在 URL 规则中限制 URL 变量为整型。")]),t._v(" "),a("p",[t._v("② 参数化查询")]),t._v(" "),a("p",[t._v("③ 转义特殊字符")]),t._v(" "),a("p",[t._v("比如引号、分号和横线等。使用参数化查询时，各种接口库会为我们做转义工作。")]),t._v(" "),a("h3",{attrs:{id:"_4-点击劫持-clickjacking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-点击劫持-clickjacking"}},[t._v("#")]),t._v(" 4. 点击劫持(ClickJacking)")]),t._v(" "),a("p",[t._v("防范策略：")]),t._v(" "),a("p",[t._v("①csp （Content-Security-Policy）")]),t._v(" "),a("p",[t._v("② 设置 http 响应头 x-Frame-Options")]),t._v(" "),a("p",[t._v("X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 "),a("code",[t._v("<frame>")]),t._v(", "),a("code",[t._v("<iframe>")]),t._v("或者 "),a("code",[t._v("<object>")]),t._v(" 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去。")]),t._v(" "),a("p",[t._v("X-Frame-Options 有三个值：")]),t._v(" "),a("p",[t._v("deny ：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。")]),t._v(" "),a("p",[t._v("sameorigin ：表示该页面可以在相同域名页面的 frame 中展示。")]),t._v(" "),a("p",[t._v("ALLOW-FROM uri ：表示该页面可以在指定来源的 frame 中展示。")]),t._v(" "),a("p",[t._v("换一句话说，如果设置为 deny，不光在别人的网站 frame 嵌入时会无法加载，在同域名页面中同样会无法加载。另一方面，如果设置为 sameorigin ，那么页面就可以在同域名页面的 frame 中嵌套。\n③ 还可以使用 "),a("code",[t._v("window.self")]),t._v(" 和 "),a("code",[t._v("window.top")]),t._v(" 来判断")]),t._v(" "),a("p",[a("code",[t._v("window.self")]),t._v(" 返回一个指向当前 "),a("code",[t._v("window")]),t._v(" 的一个引用")]),t._v(" "),a("p",[a("code",[t._v("window.top")]),t._v(" 返回窗口体系中最顶层窗口的引用")]),t._v(" "),a("p",[t._v("对于非同源的域名，iframe 子页面无法通过 "),a("code",[t._v("parent.location")]),t._v(" 或者 "),a("code",[t._v("top.location")]),t._v(" 拿到具体的页面地址，但是可以写入 "),a("code",[t._v("top.location")]),t._v("，也就是可以控制父页面的跳转，所以当我们发现页面被嵌入在 "),a("code",[t._v("iframe")]),t._v(" 中时，可以重定向父级页面：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if (window.self != window.top) {\n    //正常页面\n    top.location.href = self.location.href\n}\n")])])]),a("h3",{attrs:{id:"_5-防爬虫方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-防爬虫方式"}},[t._v("#")]),t._v(" 5. 防爬虫方式 ？")]),t._v(" "),a("p",[t._v("font-face 拼接、背景图、css 伪元素、元素定位覆盖式（去哪儿加个通过标签偏移实现视觉价格正确）、字符集替换")]),t._v(" "),a("h3",{attrs:{id:"_6-前端数据加密方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-前端数据加密方式"}},[t._v("#")]),t._v(" 6. 前端数据加密方式 ？")]),t._v(" "),a("p",[t._v("验证码（一次性、时效性）、sha1、base64、md5、RSA")]),t._v(" "),a("h3",{attrs:{id:"_7-怎么防止数据包被篡改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-怎么防止数据包被篡改"}},[t._v("#")]),t._v(" 7.怎么防止数据包被篡改？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("请求参数与私钥拼接后再使用 md5 加密生成一个签名，再加入一个时间戳，一起发给服务端，服务端这边获取到参数，签名，再使用自己的私钥进行同样方式的加密生成签名，比对签名是否一致。一致则认为合法，不一致则不合法。")])]),t._v(" "),a("li",[a("p",[t._v("请求方式换成 https")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);