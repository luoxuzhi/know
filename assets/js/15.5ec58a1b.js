(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{442:function(t,o,_){"use strict";_.r(o);var r=_(53),e=Object(r.a)({},(function(){var t=this,o=t.$createElement,_=t._self._c||o;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_10-prototype、constructor、-proto"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-prototype、constructor、-proto"}},[t._v("#")]),t._v(" 10. prototype、constructor、"),_("code",[t._v("__proto__")])]),t._v(" "),_("ol",[_("li",[_("img",{attrs:{src:t.$withBase("/assets/prototype.png")}})])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://blog.csdn.net/cc18868876837/article/details/81211729",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体分析"),_("OutboundLink")],1)]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("__proto__")]),t._v("和 constructor 属性是对象所独有的，prototype 属性是函数所独有的，因为函数也是一种对象，所以函数也拥有"),_("code",[t._v("__proto__")]),t._v("和 constructor 属性。")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("__proto__")]),t._v("属性的作用就是当访问一个对象的属性时，如果该对象内部不存在这个属性，那么就会去它的"),_("code",[t._v("__proto__")]),t._v("属性所指向的那个对象（父对象）里找，一直找，直到"),_("code",[t._v("__proto__")]),t._v("属性的终点 null，再往上找就相当于在 null 上取值，会报错。通过"),_("code",[t._v("__proto__")]),t._v("属性将对象连接起来的这条链路即我们所谓的原型链。")])]),t._v(" "),_("li",[_("p",[t._v("prototype 属性的作用就是让该函数所实例化的对象们都可以找到公用的属性和方法，即 f1."),_("code",[t._v("__proto__")]),t._v(" === Foo.prototype。")])]),t._v(" "),_("li",[_("p",[t._v("constructor 属性的含义就是指向该对象的构造函数，所有函数（此时看成对象了）最终的构造函数都指向 Function。")])])])])}),[],!1,null,null,null);o.default=e.exports}}]);